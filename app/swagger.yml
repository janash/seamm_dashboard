openapi: 3.0.0
info:
  title: SEAMM Dashboard API
  description: This is an API for the SEAMM dashboard.
  contact:
    email: janash@vt.edu
  version: "1.0.0"
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operations available to regular developers
paths:
  /api/jobs/{id}:
    get:
      tags:
      - developers
      summary: searches jobs database by id
      description: |
        Get jobs. By passing parameters you can get jobs fitting a certain criteria.
      operationId: app.routes.api.get_job
      parameters:
      - name: id
        in: path
        description: retrieve job by id.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
  /api/jobs/{id}/files:
    get:
      tags:
      - developers
      summary: returns json of files associated with a particular job
      description: |
        Get job files.
      operationId: app.routes.api.get_job_files
      parameters:
      - name: id
        in: path
        description: retrieve job by id.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: file_path
        in: query
        schema: 
          type: string
        description: Retrieve text for file.
      responses:
        "200":
          description: search results matching criteria
        "400":
          description: bad input parameter
  /api/jobs:
    get:
      tags:
      - developers
      summary: searches jobs database
      description: |
        Get jobs. By passing parameters you can get jobs fitting a certain criteria.
      operationId: app.routes.api.get_jobs
      parameters:
      - name: createdSince
        in: query
        description: look for jobs created since a date.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdBefore
        in: query
        description: look for jobs created before a date.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        "400":
          description: bad input parameter
    post:
      tags:
      - developers
      summary: adds a new job
      description: |
        Add a job. By passing parameters you can get jobs fitting a certain criteria.
      operationId: app.routes.api.add_job
      responses:
        "200":
          description: id of submitted job
          content:
            application/json:
              schema:
                type: integer
        "400":
          description: bad input parameter
  /api/flowcharts:
    get:
      tags:
      - developers
      summary: searches flowcharts database
      description: |
        Get flowcharts
      operationId: app.routes.api.get_flowcharts
      parameters:
      - name: description
        in: query
        schema: 
          type: string
        description: Search within flowchart description.
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowchart'
        "400":
          description: bad input parameter
  /api/flowcharts/{id}:
    get:
      tags:
      - developers
      summary: searches database by flowchart id
      description: |
        Get flowchart by ID.
      operationId: app.routes.api.get_flowchart
      parameters:
      - name: id
        in: path
        description: retrieve flowchart by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowchart'
        "400":
          description: bad input parameter
  /api/flowcharts/{id}/cytoscape:
    get:
      tags:
      - developers
      summary: searches database by flowchart id
      description: |
        Get flowchart by ID.
      operationId: app.routes.api.get_cytoscape
      parameters:
      - name: id
        in: path
        description: retrieve flowchart by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flowchart'
        "400":
          description: bad input parameter
  /api/projects:
    get:
      tags:
      - developers
      summary: searches projectss database
      description: |
        Get projects
      operationId: app.routes.api.get_projects
      parameters:
      - name: description
        in: query
        schema: 
          type: string
        description: Search within project description.
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        "400":
          description: bad input parameter
  /api/projects/{id}:
    get:
      tags:
      - developers
      summary: searches database by project id
      description: |
        Get flowchart by ID.
      operationId: app.routes.api.get_project
      parameters:
      - name: id
        in: path
        description: retrieve project by id.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        "400":
          description: bad input parameter
components:
  schemas:
    Flowchart:
      required:
      - flowchart_file
      - flowchart_json
      - id
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        flowchart_file:
          type: string
        flowchart_json:
          type: string
    Job:
      required:
      - flowchart_id
      - id
      - path
      - submission_date
      type: object
      properties:
        id:
          type: integer
          example: 1
        path:
          type: string
          format: filepath
          example: /Users/username/seamm/projects
        flowchart_id:
          type: string
        submission_date:
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    Project:
      required:
      - id
      - path
      - name
      type: object
      properties:
        id:
          type: integer
          example: 1
        path:
          type: string
          format: filepath
          example: /Users/username/seamm/projects
        name:
          type: string
          example: MyProject
      
